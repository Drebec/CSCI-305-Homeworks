Andrew Beck
Homework 3

Types
1a.  bool
1b.  bool list

2a. Yes, the set of integers divisible by 12 is a subset of the set of integers divisible by 3, therefore this assignment is valid.
2b. Yes, the set of integers divisible by 3 is a subset of the set of all integers, therefore this assignment is valid.
2c. Yes, adding 3 to an integer divisible by 3 will always result in an integer divisible by 3, therefore this assignment is valid.

3.  An associative array, also called a hash, in Perl is essentially a table of data made up of 'key' and scalar 'value' pairs where 'key' is a Perl type and 'value' can be mixed scalar types. Associative arrays support 'indexing' using a given key, as well as the creation of new entries and the modification of existing entries. Calling keys(%arrayname) returns a list of all keys in the array, similarly values(%arrayname) lists all values in the array. delete $arrayname("key") can remove a key-value pair from an array. Associative arrays also support iteration using either 'while' with 'each' or 'foreach' with 'keys'. This allows the programmer to iterate through an associative array as you would a normal array.

Polymorphism
1a. (r + i) => real * int -> real
    i + () => int * real -> real
1b. (r + i) => real * int -> real
    i + i => int * int -> int
    i + r => int * real -> real
    r + () => real * real -> real

2a. Using overloading, the '+' operator would have to be defined as it was in Problem 1. Assuming an integer by itself is defined as type 'int' and a number containing a decimal point is defined as type 'real', then the definition of the '+' operator could be as follows: int * real -> real, int * int -> int, real * int -> real, real * real -> real.
2b. If the type 'real' was a subtype of type 'int', and the 'int' type supported the '+' operator, then the 'real' type would inherit support for the '+' operator from its parent type, 'int'. This would mean any of the operations described in the question would be valid without the need for parameter coercion or overloading.
